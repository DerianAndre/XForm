/*!
 * XForm
 * A simple, lightweight, and automated way to manage forms with fetch or XHR.
 * @version    : 1.0.0
 * @author     : DerianAndre <hola@derianandre.com>
 * @repository : https://github.com/DerianAndre/XForm.git
 * @built      : 7/6/2021
 * @license    : MIT
 */
!function(t,e){"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?module.exports=e():t.XForm=e()}(this,function(){const i="[data-xform]",r="[data-xform-submit]",s="[data-xform-reset]",o=window.location.href,a="post",n=!0,c="is-valid",h="is-invalid",f=null,l="name",u="[data-xform-item]",m={file:"files",checkbox:"checked",default:"value"};function d(t=i,e={}){"object"==typeof t?e=t:e.selector=t;e=p({selector:i,method:a,url:o,submit:r,reset:s,item:{selector:u,default:f,key:l},classes:{enable:n,valid:c,invalid:h}},e);return this.config=e,this.data={},this.formData=new FormData,this.items={array:[],object:{}},this.length=0,this.ready=!1,this.form=null,this.submit=null,this.reset=null,this.init=g,this.check=y,this.$xhr=v,this.$fetch=b,this}function g(){var t=document.querySelector(this.config.selector);if(!t)throw new Error("[XForm] Form selector missing");var e=Array.from(t.querySelectorAll(this.config.item.selector)),i=t.querySelector(this.config.submit),r=t.querySelector(this.config.reset);return e.forEach(t=>{var e=t.getAttribute(this.config.item.key);if(!e)throw new Error("[XForm] Item key missing");this.data[e]=this.config.item.default,this.items.object[e]=t}),this.form=t,this.submit=i||null,this.reset=r||null,this.items.array=e,this.length=this.items.array.length,this}function y(){var s=0;return this.formData=new FormData,this.items.array.forEach(t=>{var e,i=t.getAttribute(this.config.item.key),r=t.getAttribute("type")||"default";if(!i)throw new Error("[XForm] Item does not have a key");t.value&&""!=t.value?(this.config.classes.enable&&(t.classList.add(this.config.classes.valid),t.classList.remove(this.config.classes.invalid)),e=function(t,e,i){if(!t||!e||!i)return null;var r=t.config.item.default;"radio"===i&&(t=Array.from(t.form.querySelectorAll(`[name="${e.name}"]`)),e=t.find(t=>t.checked));r=e[m[i]]||e[m.default],"checkbox"===i&&(r=!!e.checked&&e.value);return r}(this,t,r),this.data[i]=e,"file"==r?0<t.files.length?Array.from(e).forEach(t=>{this.formData.append(`${i}[]`,t)}):this.formData.append(i,null):this.formData.append(i,e)):t.hasAttribute("required")&&(s++,this.config.classes.enable&&(t.classList.add(this.config.classes.invalid),t.classList.remove(this.config.classes.valid)))}),0===s&&(this.ready=!0),this}function v(t){var e=new XMLHttpRequest;e.open(this.config.method,this.config.url,!0),e.send(this.formData),e.onreadystatechange=function(){if(4===e.readyState&&200===e.status){try{e.json=JSON.parse(e.responseText),e.error=!1}catch(t){e.json=!1,e.error=t}return t(e)}}}async function b(t={}){t=p({method:this.config.method||a,body:this.formData||null},t);const e=await fetch(this.config.url,t);try{e.json=await e.json(),e.error=!1}catch(t){e.json=!1,e.error=t}return e}function p(t,e){if(Object(e)!==e)return e;for(var i in Object(t)!==t&&(t={}),e)t[i]=p(t[i],e[i]);return t}return function(t,e){return new d(t,e)}});