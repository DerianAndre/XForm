/*!
 * XForm
 * A simple, lightweight, and automated way to manage forms with vanilla javascript, fetch and/or XHR.
 * @version    : 1.0.0
 * @author     : DerianAndre <hola@derianandre.com>
 * @repository : https://github.com/DerianAndre/XForm.git
 * @built      : 11/6/2021
 * @license    : MIT
 */
!function(t,e){"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?module.exports=e():t.XForm=e()}(this,function(){const i="[data-xform]",s="[data-xform-submit]",r="[data-xform-reset]",a=window.location.href,o="post",n=!0,c=!0,h=!0,l="is-valid",f="is-invalid",u=!0,m=null,d="name",g="[data-xform-item]",y="[data-xform-ignore]",v="input, select, textarea",b={file:"files",checkbox:"checked",default:"value"};function p(t=i,e={}){"object"==typeof t?e=t:e.selector=t;e=x({selector:i,method:o,url:a,submit:s,reset:r,json:n,jsonOnly:c,item:{selectAll:u,selector:g,ignore:y,key:d,default:m},classes:{enable:h,valid:l,invalid:f}},e);return this.config=e,this.form=null,this.ready=!1,this.submit=null,this.reset=null,this.data={},this.dataJSON={},this.formData=new FormData,this.items={array:[],object:{}},this.length=0,this.init=j,this.check=w,this.$xhr=A,this.$fetch=k,this}function j(){var s=document.querySelector(this.config.selector);if(!s)throw new Error("[XForm] Form selector missing");var t=this.config.item.selectAll?v:this.config.item.selector,e=Array.from(s.querySelectorAll(t)),i=s.querySelector(this.config.submit),t=s.querySelector(this.config.reset);return e.forEach(t=>{if(!t.hasAttribute(this.config.item.ignore.slice(1,-1))&&!t.classList.contains(this.config.item.ignore)){var e=t.getAttribute(this.config.item.key);if(!e)throw new Error("[XForm] Item key missing");var i=Array.from(s.querySelectorAll(`[${this.config.item.key}="${e}"]`));this.data[e]=this.config.item.default,this.items.array.push(t),this.items.object[e]=1===i.length?t:i}}),this.form=s,this.submit=i||null,this.reset=t||null,this.length=this.items.array.length,this}function w(){var r=0;this.formData=new FormData,this.items.array.forEach(t=>{var e=t.getAttribute(this.config.item.key);if(!e)throw new Error("[XForm] Item does not have a key");var i=t.getAttribute("type")||"default",s=function(t,e,i){if(!t||!e||!i)return null;"radio"===i&&(s=Array.from(t.form.querySelectorAll(`[name="${e.name}"]`)),e=s.find(t=>t.checked));var s=e[b[i]]||e[b.default];s=s||t.config.item.default,"checkbox"===i&&(s=!!e.checked&&e.value);return s}(this,t,i);t.value&&""!=t.value?this.config.classes.enable&&(t.classList.add(this.config.classes.valid),t.classList.remove(this.config.classes.invalid)):t.hasAttribute("required")&&(r++,this.config.classes.enable&&(t.classList.add(this.config.classes.invalid),t.classList.remove(this.config.classes.valid))),this.data[e]=s,"file"==i?0<t.files.length?Array.from(s).forEach(t=>{this.formData.append(`${e}[]`,t)}):this.config.jsonOnly||this.formData.append(e,null):this.config.jsonOnly||this.formData.append(e,s)});var t=JSON.stringify(this.data);return this.dataJSON=t,this.formData.append("dataJSON",t),0===r&&(this.ready=!0),this}function A(t){var e=new XMLHttpRequest;e.open(this.config.method,this.config.url,!0),e.send(this.formData),e.onreadystatechange=function(){if(4===e.readyState&&200===e.status){try{e.json=JSON.parse(e.responseText),e.error=!1}catch(t){e.json=!1,e.error=t}return t(e)}}}async function k(t={}){t=x({method:this.config.method||o,body:this.formData||null},t);const e=await fetch(this.config.url,t);try{e.json=await e.json(),e.error=!1}catch(t){e.json=!1,e.error=t}return e}function x(t,e){if(Object(e)!==e)return e;for(var i in Object(t)!==t&&(t={}),e)t[i]=x(t[i],e[i]);return t}return function(t,e){return new p(t,e)}});